{"version":3,"sources":["components/Header.js","components/pages/Landing.js","components/pages/About.js","components/shop/ItemList.js","components/shop/Shop.js","components/chatbot/Message.js","components/chatbot/Card.js","components/chatbot/QuickReply.js","components/chatbot/QuickReplies.js","components/chatbot/Chatbot.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","to","id","Landing","style","textAlign","ItemList","Shop","Message","props","speaks","href","text","Card","height","paddingRight","float","width","alt","payload","fields","header","stringValue","src","image","description","price","target","rel","link","QuickReply","reply","structValue","margin","onClick","event","click","QuickReplies","_handleClick","bind","this","replyClick","i","key","quickReplies","map","renderQuickReply","renderQuickReplies","Component","cookies","Cookies","Chatbot","_handleInputKeyPress","_handleQuickReplyPayload","hide","show","state","messages","showBot","shopWelcomeSent","undefined","get","set","uuid","path","says","msg","setState","axios","post","userID","res","data","fulfillmentMessages","that","setTimeout","x","Promise","resolve","df_event_query","window","location","pathname","resolveAfterXSeconds","history","listen","messagesEnd","scrollIntoView","behavior","talkInput","focus","preventDefault","stopPropagation","df_text_query","cards","card","message","overflow","overflowY","listValue","values","length","renderCards","quick_replies","returnedMessages","renderOneMessage","e","value","minHeight","maxHeight","position","bottom","right","border","renderMessages","ref","el","clear","paddingLeft","input","placeholder","onKeyPress","type","withRouter","App","exact","component","About","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.7f44f415.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => (\r\n    <nav>\r\n        <div className=\"nav-wrapper\">\r\n            <Link to={'/'} className=\"brand-logo\">IT courses</Link>\r\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                <li><Link to={'/shop'}>Shop</Link></li>\r\n                <li><Link to={'/about'}>About us</Link></li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Landing = () => (\r\n    <div style={{ textAlign: 'center' }}>\r\n        <h1>Selling you great stuff!</h1>\r\n        with the help of the chatbot\r\n    </div>\r\n)\r\n\r\nexport default Landing;","import React from 'react';\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <div><h1>Selling you great stuff!</h1>\r\n            with the help of the chatbot\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\n\r\nconst ItemList = () => (\r\n    <div>\r\n        <h1>Here goes a list of items</h1>\r\n    </div>\r\n)\r\n\r\nexport default ItemList;","import React from 'react';\r\nimport ItemList from './ItemList';\r\n\r\nconst Shop = () => (\r\n    <div>\r\n        <h1>Shop</h1>\r\n        <ItemList />\r\n    </div>\r\n)\r\n\r\nexport default Shop;","import React from 'react';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n\r\n        <div className=\"col s12 m8 offset-m2 l6 offset-l3\">\r\n            <div className=\"card-panel grey lighten-5 z-depth-1\">\r\n                <div className=\"row valign-wrapper\">\r\n                    {props.speaks==='bot' &&\r\n                    <div className=\"col s2\">\r\n                        <a href=\"/\" className=\"btn-floating btn-large waves-effect waves-light red\">{props.speaks}</a>\r\n                    </div>\r\n                    }\r\n                    <div className=\"col s10\">\r\n                      <span className=\"black-text\">\r\n                        {props.text}\r\n                      </span>\r\n                    </div>\r\n                    {props.speaks==='user' &&\r\n                    <div className=\"col s2\">\r\n                        <a href=\"/\" className=\"btn-floating btn-large waves-effect waves-light red\">{props.speaks}</a>\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Message;","\r\n\r\nimport React from 'react';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div  style={{ height: 270, paddingRight:30, float: 'left'}}>\r\n            <div className=\"card\">\r\n                <div className=\"card-image\" style={{ width: 240}}>\r\n                    <img alt={props.payload.fields.header.stringValue} src={props.payload.fields.image.stringValue} />\r\n                    <span className=\"card-title\">{props.payload.fields.header.stringValue}</span>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    {props.payload.fields.description.stringValue}\r\n                    <p> <a href=\"/\">{props.payload.fields.price.stringValue}</a></p>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.payload.fields.link.stringValue}>GET NOW</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\n\r\n\r\nconst QuickReply = (props) => {\r\n    if (props.reply.structValue.fields.payload) {\r\n        return (\r\n            <a style={{ margin: 3}} href=\"/\" className=\"btn-floating btn-large waves-effect waves-light red\"\r\n               onClick={(event) =>\r\n                   props.click(\r\n                       event,\r\n                       props.reply.structValue.fields.payload.stringValue,\r\n                       props.reply.structValue.fields.text.stringValue\r\n                   )\r\n               }>\r\n                {props.reply.structValue.fields.text.stringValue}\r\n            </a>\r\n        );\r\n    } else {\r\n        return (\r\n            <a style={{ margin: 3}} href={props.reply.structValue.fields.link.stringValue}\r\n               className=\"btn-floating btn-large waves-effect waves-light red\">\r\n                {props.reply.structValue.fields.text.stringValue}\r\n            </a>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default QuickReply;","import React, { Component } from 'react';\r\nimport QuickReply from './QuickReply';\r\n\r\n\r\nclass QuickReplies extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this._handleClick = this._handleClick.bind(this);\r\n    }\r\n\r\n    _handleClick(event, payload, text) {\r\n        this.props.replyClick(event, payload, text);\r\n    }\r\n\r\n    renderQuickReply(reply, i) {\r\n        return <QuickReply key={i} click={this._handleClick} reply={reply} />;\r\n    }\r\n\r\n    renderQuickReplies(quickReplies) {\r\n        if (quickReplies) {\r\n            return quickReplies.map((reply, i) => {\r\n                    return this.renderQuickReply(reply, i);\r\n                }\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col s12 m8 offset-m2 l6 offset-l3\">\r\n                <div className=\"card-panel grey lighten-5 z-depth-1\">\r\n                    <div className=\"row valign-wrapper\">\r\n                        <div className=\"col s2\">\r\n                            <a href=\"/\" className=\"btn-floating btn-large waves-effect waves-light red\">{this.props.speaks}</a>\r\n                        </div>\r\n                        <div id=\"quick-replies\" className=\"col s10\">\r\n                            {this.props.text && <p>\r\n                                {this.props.text.stringValue}\r\n                            </p>\r\n                            }\r\n                            {this.renderQuickReplies(this.props.payload)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuickReplies;","import React, { Component } from 'react';\r\nimport axios from \"axios/index\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Cookies from 'universal-cookie';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport Message from './Message';\r\nimport Card from './Card';\r\nimport QuickReplies from './QuickReplies';\r\n\r\nconst cookies = new Cookies();\r\n\r\nclass Chatbot extends Component {\r\n    messagesEnd;\r\n    talkInput;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // This binding is necessary to make `this` work in the callback\r\n        this._handleInputKeyPress = this._handleInputKeyPress.bind(this);\r\n        this._handleQuickReplyPayload = this._handleQuickReplyPayload.bind(this);\r\n\r\n        this.hide = this.hide.bind(this);\r\n        this.show = this.show.bind(this);\r\n        this.state = {\r\n            messages: [],\r\n            showBot: true,\r\n            shopWelcomeSent: false\r\n        };\r\n        if (cookies.get('userID') === undefined) {\r\n            cookies.set('userID', uuid(), { path: '/' });\r\n        }\r\n    }\r\n\r\n    async df_text_query (text) {\r\n        let says = {\r\n            speaks: 'user',\r\n            msg: {\r\n                text : {\r\n                    text: text\r\n                }\r\n            }\r\n        }\r\n        this.setState({ messages: [...this.state.messages, says]});\r\n        try {\r\n            const res = await axios.post('/api/df_text_query',  {text, userID: cookies.get('userID')});\r\n\r\n            for (let msg of res.data.fulfillmentMessages) {\r\n                says = {\r\n                    speaks: 'bot',\r\n                    msg: msg\r\n                }\r\n                this.setState({ messages: [...this.state.messages, says]});\r\n            }\r\n        } catch (e) {\r\n            says = {\r\n                speaks: 'bot',\r\n                msg: {\r\n                    text : {\r\n                        text: \"I'm having troubles. I need to terminate. will be back later\"\r\n                    }\r\n                }\r\n            }\r\n            this.setState({ messages: [...this.state.messages, says]});\r\n            let that = this;\r\n            setTimeout(function(){\r\n                that.setState({ showBot: false})\r\n            }, 2000);\r\n        }\r\n    };\r\n\r\n\r\n    async df_event_query(event) {\r\n        try {\r\n            const res = await axios.post('/api/df_event_query',  {event, userID: cookies.get('userID')});\r\n\r\n            for (let msg of res.data.fulfillmentMessages) {\r\n                let says = {\r\n                    speaks: 'bot',\r\n                    msg: msg\r\n                }\r\n\r\n                this.setState({ messages: [...this.state.messages, says]});\r\n            }\r\n        } catch (e) {\r\n            let says = {\r\n                speaks: 'bot',\r\n                msg: {\r\n                    text : {\r\n                        text: \"I'm having troubles. I need to terminate. will be back later\"\r\n                    }\r\n                }\r\n            }\r\n            this.setState({ messages: [...this.state.messages, says]});\r\n            let that = this;\r\n            setTimeout(function(){\r\n                that.setState({ showBot: false})\r\n            }, 2000);\r\n        }\r\n\r\n    };\r\n\r\n\r\n//a pause between messages\r\n    resolveAfterXSeconds(x) {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve(x);\r\n            }, x * 1000);\r\n        })\r\n    }\r\n// Welcome on shop listen to navigation history\r\n    async componentDidMount() {\r\n        this.df_event_query('Welcome');\r\n\r\n        if (window.location.pathname === '/shop' && !this.state.shopWelcomeSent) {\r\n            await this.resolveAfterXSeconds(1);\r\n            this.df_event_query('WELCOME_SHOP');\r\n            this.setState({ shopWelcomeSent: true, showBot: true });\r\n        }\r\n\r\n        this.props.history.listen(() => {\r\n            if (this.props.history.location.pathname === '/shop' && !this.state.shopWelcomeSent) {\r\n                this.df_event_query('WELCOME_SHOP');\r\n                this.setState({ shopWelcomeSent: true, showBot: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n        if ( this.talkInput ) {\r\n            this.talkInput.focus();\r\n        }\r\n    }\r\n\r\n    show(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.setState({showBot: true});\r\n    }\r\n\r\n    hide(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.setState({showBot: false});\r\n    }\r\n\r\n    _handleQuickReplyPayload(event, payload, text) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        switch (payload) {\r\n            case 'recommended_yes':\r\n                this.df_event_query('SHOW_RECOMMENDATIONS');\r\n                break;\r\n            case 'training_masterclass':\r\n                this.df_event_query('MASTERCLASS');\r\n                break;\r\n                default:\r\n                this.df_text_query(text);\r\n                break;\r\n        }\r\n    }\r\n\r\n    renderCards(cards) {\r\n        return cards.map((card, i) => <Card key={i} payload={card.structValue}/>);\r\n    }\r\n\r\n    renderOneMessage(message, i) {\r\n\r\n        if (message.msg && message.msg.text && message.msg.text.text) {\r\n            return <Message key={i} speaks={message.speaks} text={message.msg.text.text}/>;\r\n        } else if (message.msg && message.msg.payload.fields.cards) { //message.msg.payload.fields.cards.listValue.values\r\n\r\n            return <div key={i}>\r\n                <div className=\"card-panel grey lighten-5 z-depth-1\">\r\n                    <div style={{overflow: 'hidden'}}>\r\n                        <div className=\"col s2\">\r\n                            <a href=\"/\" className=\"btn-floating btn-large waves-effect waves-light red\">{message.speaks}</a>\r\n                        </div>\r\n                        <div style={{ overflow: 'auto', overflowY: 'scroll'}}>\r\n                            <div style={{ height: 300, width:message.msg.payload.fields.cards.listValue.values.length * 270}}>\r\n                                {this.renderCards(message.msg.payload.fields.cards.listValue.values)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        } else if (message.msg &&\r\n            message.msg.payload &&\r\n            message.msg.payload.fields &&\r\n            message.msg.payload.fields.quick_replies\r\n        ) {\r\n            return <QuickReplies\r\n                text={message.msg.payload.fields.text ? message.msg.payload.fields.text : null}\r\n                key={i}\r\n                replyClick={this._handleQuickReplyPayload}\r\n                speaks={message.speaks}\r\n                payload={message.msg.payload.fields.quick_replies.listValue.values}/>;\r\n        }\r\n    }\r\n\r\n    renderMessages(returnedMessages) {\r\n        if (returnedMessages) {\r\n            return returnedMessages.map((message, i) => {\r\n                    return this.renderOneMessage(message, i);\r\n                }\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    _handleInputKeyPress(e) {\r\n        if (e.key === 'Enter') {\r\n            this.df_text_query(e.target.value);\r\n            e.target.value = '';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.showBot) {\r\n            return (\r\n                <div style={{ minHeight: 500, maxHeight: 470, width:400, position: 'absolute', bottom: 0, right: 0, border: '1px solid lightgray'}}>\r\n                    <nav>\r\n                        <div className=\"nav-wrapper\">\r\n                            <a href=\"/\" className=\"brand-logo\">ChatBot</a>\r\n                            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                                <li><a href=\"/\" onClick={this.hide}>Close</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n\r\n                    <div id=\"chatbot\"  style={{ minHeight: 388, maxHeight: 388, width:'100%', overflow: 'auto'}}>\r\n\r\n                        {this.renderMessages(this.state.messages)}\r\n                        <div ref={(el) => { this.messagesEnd = el; }}\r\n                             style={{ float:\"left\", clear: \"both\" }}>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\" col s12\" >\r\n                        <input style={{margin: 0, paddingLeft: '1%', paddingRight: '1%', width: '98%'}} ref={(input) => { this.talkInput = input; }} placeholder=\"type a message:\"  onKeyPress={this._handleInputKeyPress} id=\"user_says\" type=\"text\" />\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div style={{ minHeight: 40, maxHeight: 500, width:400, position: 'absolute', bottom: 0, right: 0, border: '1px solid lightgray'}}>\r\n                    <nav>\r\n                        <div className=\"nav-wrapper\">\r\n                            <a href=\"/\" className=\"brand-logo\">ChatBot</a>\r\n                            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                                <li><a href=\"/\" onClick={this.show}>Show</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                    <div ref={(el) => { this.messagesEnd = el; }}\r\n                         style={{ float:\"left\", clear: \"both\" }}>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Chatbot);","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\n\r\nimport Header from './Header';\r\nimport Landing from './pages/Landing';\r\nimport About from './pages/About';\r\nimport Shop from './shop/Shop';\r\nimport Chatbot from './chatbot/Chatbot';\r\n\r\nconst App = () => (\r\n    <div>\r\n        <BrowserRouter>\r\n            <div className=\"container\">\r\n                <Header />\r\n                <Route exact path=\"/\" component={Landing} />\r\n                <Route exact path=\"/about\" component={About} />\r\n                <Route exact path=\"/shop\" component={Shop} />\r\n                <Chatbot />\r\n            </div>\r\n        </BrowserRouter>\r\n    </div>\r\n)\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'materialize-css/dist/css/materialize.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}